#lang sicp

(#%require rackunit)

; Чтобы применить процедуру к аргументам, требуется вычислить тело процедуры каждый параметр соответствующим аргументом
; Восстановим тело функции sum-of-squares из прошлого раздела

; (sum-of-squares 3 4)
; (+ (square 3) (square 4)))
; (+ (* 3 3) (* 4 4))
; (+ (9) (16))
; 25
; Этот процесс называется подстановочной моделью

; Пример из книги

; Апликативный порядок вычислений. Вычисление аргументов, затем применение процедуры
; (f 5)  // f - это процедура
; (sum-of-squares (+ a 1) (* a 2)) // восстанавливаем тело f
; (sum-of-squares (+ 5 1) (* 5 2)) // заменяем параметр a на аргумент 5
; (sum-of-squares 6 10) // далее раскрываем sum-of-squares
; (+ (square 6) (square 10))) // раскрываем square
; (+ (* 6 6) (* 10 10)) // раскрываем square
; (+ 36 100)
; 136

; Нормальный порядок вычислений, здесь сначала определятся значения которые можно вычислить, затем редукция
; (f 5)
; (sum-of-squares (+ 5 1) (* 5 2))
; (+ (square (+ 5 1)) (square (* 5 2)))
; (+ (* (+ 5 1) (+ 5 1)) (* (* 5 2) (* 5 2)))
; далее редукция
; (+ (* 6 6) (* 10 10))
; (+ 36 100)
; 136

; В лиспе используется апликативный порядок вычислений процедур